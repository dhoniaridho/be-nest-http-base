import { Injectable } from '@nestjs/common';
import { {{className}}Repository } from '../repositories';
import { PaginationQueryDto } from 'src/common/dtos/pagination-query.dto';
import { Create{{className}}Dto, Update{{className}}Dto } from '../dtos';

@Injectable()
export class {{className}}Service {
  constructor(private readonly {{variableName}}Repository: {{className}}Repository) {}

  public paginate(paginateDto: PaginationQueryDto) {
    return this.{{variableName}}Repository.paginate(paginateDto);
  }

  public detail(id: string) {
    try {
      return this.{{variableName}}Repository
        .where({
          id,
        })
        .firstOrThrow();
    } catch (error) {
      throw new Error(error);
    }
  }

  public async destroy(id: string) {
    try {
      return this.{{variableName}}Repository.delete(id);
    } catch (error) {
      throw new Error(error);
    }
  }

  public async create(create{{className}}Dto: Create{{className}}Dto) {
    try {
      return this.{{variableName}}Repository.create({
        email: create{{className}}Dto.email,
        name: create{{className}}Dto.name,
      });
    } catch (error) {
      throw new Error(error);
    }
  }

  public async update(id: string, update{{className}}Dto: Update{{className}}Dto) {
    try {
      return this.{{variableName}}Repository.update(id, {
        email: update{{className}}Dto.email,
        name: update{{className}}Dto.name,
      });
    } catch (error) {
      throw new Error(error);
    }
  }
}
